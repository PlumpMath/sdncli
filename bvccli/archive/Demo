*Do BVC install

vagrant up

*Do bvccli install

untar && python setup.py install

*Install pypprint

pip install pypprint

*Go over command line

bvccli -h

*Sections

flows = Not implemented but retrieves flow information from system
show - Various elements of the system that can be interrogated

*Go into show commands

bvccli show 

bvccli show nodes
-no nodes found

*Mount VR5600

bvccli netconf mount vr5600 10.255.1.174 vyatta vyatta --port 22


*Show netconf mounts

bvccli netconf mounts


* Show system

bvccli system

* Start Heap Monitoring

while true; do bvccli system heap; sleep 1; done


* Bring up mininet
vagrant ssh -c "sudo -E mn --mac --topo linear,10 --controller remote,ip=127.0.0.1,port=6653 --switch ovsk,protocols=OpeanFlow13"

* Show nodes again

bvccli show nodes

*Perform Ping

pingall

*Show Hosts

bvccli show hosts

* Mount other devices

bvccli netconf mount vdx1 10.255.3.163 admin password
bvccli netconf mount vdx2 10.18.160.46 admin password
bvccli netconf mount vdx3 10.18.160.47 admin password
bvccli netconf mount mlx 10.255.1.212 gary gary --mlx

* Show mounts

bvccli netconf mounts

* Show Controller Modules

bvccli show modules

* Lets interrogate the controller

bvccli show modules|grep inventory

* Launch Mininet

vagrant ssh -c "sudo -E mn --mac --topo linear,10 --controller remote,ip=127.0.0.1,port=6653 --switch ovsk,protocols=OpeanFlow13"

* Show Nodes

bvccli show nodes

* Ping Hosts

* pingall


* Show Hosts

bvccli show hosts


* Get Schema

bvccli netconf schema controller-config opendaylight-inventory|more


container nodes {
        description "The root container of all nodes.";
        list node {
            key "id";
            ext:context-instance "node-context";
            description "A list of nodes (as defined by the 'grouping node').";
            uses node; //this refers to the 'grouping node' defined above.
        }

nodes/node/node-id/node-connector/node-connectorid

bvccli http  -f get http://localhost:8181/restconf/operational/opendaylight-inventory:nodes/node/openflow:2/node-connector/openflow:2:1|pypprint

module: opendaylight-inventory

   +--rw nodes
      +--rw node* [id]
         +--rw id                node-id
         +--rw node-connector* [id]
            +--rw id    node-connector-id

* Get Capbilities

bvccli netconf capabilities vr5600
bvccli netconf capabilities vdx2

* Interrogate Schema

bvccli netconf schema vdx2 brocade-interface

* Get all Schemas

bvccli netconf schema vr5600


TEST

bvccli http post http://localhost:8181/restconf/operations/opendaylight-inventory:nodes/node/vdx2/yang-ext:mount/ietf-netconf-monitoring:get-schema "{'input': {'identifier': 'brocade-interface'}}"

# rpcs:
#    +---x get-mac-address-table    
#       +---w input     
#       |  +---w (request-type)?
#       |     +--:(get-request)
# rpcs:
#       +---w input     
#       |  +---w identifier    string
#       |  +---w version?      string
#       |  +---w format?       identityref
#       +--ro output    
#          +--ro data   

* GetConfig

bvccli netconf config vr5600
bvccli netconf config vdx2





UnMount NetConf Devices

bvccli netconf unmount mlx
bvccli netconf unmount vdx1
bvccli netconf unmount vdx2
bvccli netconf unmount vdx3
bvccli netconf unmount vr5600


